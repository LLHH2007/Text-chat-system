/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package JSP0007.View;

import JSP0007.Model.Account;
import JSP0007.Model.Message;
import JSP0007.file;
import java.net.Socket;
import java.util.ArrayList;
import javax.swing.JOptionPane;

/**
 *
 * @author LONG
 */
public class ClientPanel extends javax.swing.JPanel {

    ArrayList<Account> a = new ArrayList<>();
    ArrayList<Message> m = new ArrayList<>();
    Socket socket;
    String ip, name;
    int port;
    Chat chatPanel;
    Thread t;

    /**
     * Creates new form ClientPanel
     */
    public ClientPanel(String name,int port) {
        a = file.read();
        m = file.readMess();
        this.port = port;
        this.name = name;
        initComponents();
        Connect();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        contentPane = new javax.swing.JPanel();
        btnConnect = new javax.swing.JButton();
        panel = new javax.swing.JTabbedPane();

        btnConnect.setText("Connect");
        btnConnect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConnectActionPerformed(evt);
            }
        });

        panel.setAutoscrolls(true);

        javax.swing.GroupLayout contentPaneLayout = new javax.swing.GroupLayout(contentPane);
        contentPane.setLayout(contentPaneLayout);
        contentPaneLayout.setHorizontalGroup(
            contentPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panel, javax.swing.GroupLayout.DEFAULT_SIZE, 804, Short.MAX_VALUE)
            .addGroup(contentPaneLayout.createSequentialGroup()
                .addGap(312, 312, 312)
                .addComponent(btnConnect)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        contentPaneLayout.setVerticalGroup(
            contentPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(contentPaneLayout.createSequentialGroup()
                .addComponent(btnConnect)
                .addGap(12, 12, 12)
                .addComponent(panel, javax.swing.GroupLayout.DEFAULT_SIZE, 532, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(contentPane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(contentPane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnConnectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConnectActionPerformed
        Connect();

    }//GEN-LAST:event_btnConnectActionPerformed

    private void Connect(){
        try {

            ip = "127.0.0.1";

            socket = new Socket(ip, port + 1);

            if (name.isEmpty()) {
                throw new Exception("Empty Name");
            }
            if (socket == null) {
                throw new Exception("Null Socket");
            }

            panel.removeAll();
            chatPanel = new Chat(socket, name, a.get(port).getLogin(),"START");
            panel.add(chatPanel);
            panel.updateUI();

            t = new Thread();
            t.start();

            JOptionPane.showMessageDialog(contentPane, "Connect success", "Connected",
                    JOptionPane.INFORMATION_MESSAGE);
        } catch (Exception e) {
            try {
                String mess = JOptionPane.showInputDialog(this, "User is offline, please leave a message: ");
            if (mess != null) {
                m.add(new Message(name, a.get(port).getLogin(), mess));
                file.writeMess(m);
            }
            } catch (NullPointerException techmaster1) {
                return;
            }
    }
    }

    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnConnect;
    private javax.swing.JPanel contentPane;
    private javax.swing.JTabbedPane panel;
    // End of variables declaration//GEN-END:variables
}

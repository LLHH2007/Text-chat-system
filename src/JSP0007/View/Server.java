/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package JSP0007.View;

import JSP0007.View.MessageOffline;
import JSP0007.View.Chat;
import JSP0007.Model.Account;
import JSP0007.file;
import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.net.ServerSocket;
import java.net.Socket;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

/**
 *
 * @author LONG
 */
public class Server extends javax.swing.JFrame implements Runnable{
    BufferedReader br;
    int port;
    ServerSocket socket;
    ArrayList<Account> a = new ArrayList<>();
    String name;

    /**
     * Creates new form Server
     */
    public Server(int port,String name) {
        setTitle("Welcome "+name);
        this.name=name;
        this.port=port;
        initComponents();
        start();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        contentPane = new javax.swing.JPanel();
        btnStart = new javax.swing.JButton();
        tabbedPane = new javax.swing.JTabbedPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        list = new javax.swing.JList<>();
        btnRefresh = new javax.swing.JButton();
        btnLogout = new javax.swing.JButton();
        btnMess = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btnStart.setText("Start");
        btnStart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStartActionPerformed(evt);
            }
        });

        list.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listMouseClicked(evt);
            }
        });
        list.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                listValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(list);

        tabbedPane.addTab("List user", jScrollPane1);

        btnRefresh.setText("Refresh");
        btnRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshActionPerformed(evt);
            }
        });

        btnLogout.setText("Log out");
        btnLogout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLogoutActionPerformed(evt);
            }
        });

        btnMess.setText("Message offline");
        btnMess.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMessActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout contentPaneLayout = new javax.swing.GroupLayout(contentPane);
        contentPane.setLayout(contentPaneLayout);
        contentPaneLayout.setHorizontalGroup(
            contentPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(contentPaneLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(contentPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tabbedPane)
                    .addGroup(contentPaneLayout.createSequentialGroup()
                        .addGap(253, 253, 253)
                        .addComponent(btnStart, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnRefresh)
                        .addGap(18, 18, 18)
                        .addComponent(btnLogout)
                        .addGap(18, 18, 18)
                        .addComponent(btnMess)
                        .addGap(0, 193, Short.MAX_VALUE)))
                .addGap(53, 53, 53))
        );
        contentPaneLayout.setVerticalGroup(
            contentPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(contentPaneLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(contentPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnStart)
                    .addComponent(btnRefresh)
                    .addComponent(btnLogout)
                    .addComponent(btnMess))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tabbedPane, javax.swing.GroupLayout.DEFAULT_SIZE, 509, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(contentPane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(contentPane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void setList(){
            a=file.read();
            DefaultListModel<String> listModel = new DefaultListModel<String>();

            list.setModel(listModel);
            for (Account account : a) {

                listModel.addElement(account.getLogin());
            }
    }
    private void btnStartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStartActionPerformed

        try {

            a=file.read();
            socket = new ServerSocket(port+1);
            btnStart.setVisible(false);
            btnRefresh.setVisible(true);
            DefaultListModel<String> listModel = new DefaultListModel<String>();

            list.setModel(listModel);
            for (Account account : a) {

                listModel.addElement(account.getLogin());
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(contentPane, "Details: " + e, "Start server error",
                    JOptionPane.ERROR_MESSAGE);
        }

        Thread t = new Thread(this);
        t.start();

    }//GEN-LAST:event_btnStartActionPerformed

    private void start(){
        try {

            a=file.read();
            socket = new ServerSocket(port+1);
            btnStart.setVisible(false);
            btnRefresh.setVisible(true);
            DefaultListModel<String> listModel = new DefaultListModel<String>();

            list.setModel(listModel);
            for (Account account : a) {

                listModel.addElement(account.getLogin());
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(contentPane, "Details: " + e, "Start server error",
                    JOptionPane.ERROR_MESSAGE);
        }

        Thread t = new Thread(this);
        t.start();
    }
    private void btnRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshActionPerformed
        setList();
    }//GEN-LAST:event_btnRefreshActionPerformed

    private void listValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_listValueChanged
        
    }//GEN-LAST:event_listValueChanged

    private void btnLogoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLogoutActionPerformed
        try {
            socket.close();
            JOptionPane.showMessageDialog(contentPane, name+" has left", "Stop message",
                    JOptionPane.INFORMATION_MESSAGE);
        } catch (Exception ex) {
            Logger.getLogger(Server.class.getName()).log(Level.SEVERE, null, ex);
        }
        setVisible(false);
    }//GEN-LAST:event_btnLogoutActionPerformed

    private void btnMessActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMessActionPerformed
        MessageOffline m = new MessageOffline(name);
        m.setVisible(true);
    }//GEN-LAST:event_btnMessActionPerformed

    private void listMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listMouseClicked
        try{
             String s = list.getSelectedValue();
            int i=0;
            //Client c;
            ClientPanel c;
            if(s.equalsIgnoreCase(a.get(port).getLogin())){
                return;
            }else{
                for (Account account : a) {
                    if(account.getLogin().equalsIgnoreCase(s)){
                        i=a.indexOf(account);
                        //c = new Client(name, i);
                        c=new ClientPanel(name,i);
                        //c.setVisible(true);
                        tabbedPane.add(a.get(i).getLogin(),c);
                        
                        break;
                    }
                }
            }
        } catch(IndexOutOfBoundsException ex){}
       
    }//GEN-LAST:event_listMouseClicked

    @Override
    public void run() {
        while (true) {
            try {

                Socket staffSocket = socket.accept();
                if (staffSocket != null) {

                    
                    br = new BufferedReader(new InputStreamReader(staffSocket.getInputStream()));
                    String staffName = br.readLine();
                    staffName = staffName.substring(0, staffName.indexOf(":"));

                   
                    Chat chatPanel = new Chat(staffSocket, name, staffName,"SEND");
                    
                    tabbedPane.add(staffName,chatPanel);
                    tabbedPane.updateUI();
                    Thread t = new Thread(chatPanel);
                     t.start();

                   
                }

           
            } catch (Exception e) {
                // Do not change this because it spawn try-catch many time while running thread!
            }
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Server.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Server.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Server.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Server.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnLogout;
    private javax.swing.JButton btnMess;
    private javax.swing.JButton btnRefresh;
    private javax.swing.JButton btnStart;
    private javax.swing.JPanel contentPane;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JList<String> list;
    private javax.swing.JTabbedPane tabbedPane;
    // End of variables declaration//GEN-END:variables
}
